- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandard = _.includes(['get', 'post'], method);
  form(action= url method= isStandard ? method : 'post')
    if !isStandard
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, options = { as: 'text', labelName: '' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= options['labelName']
    input(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, options = { type: 'submit', value: 'Save' })
  .form-group
    input(class='btn' type=options['type'] ? options['type'] : 'submit' value=options['value'])
